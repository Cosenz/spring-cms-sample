build.version=@project.version@

## Spring datasource.
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/retail?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
 
## Hibernate properties.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
 
## Show sql query.
spring.jpa.show-sql=true
 
## Hibernate ddl auto.
spring.jpa.hibernate.ddl-auto=validate

uploadImageFolder = C:/upload/images/
http.image.url = http://localhost:8080/upload/images/

###########################
##### 		JWT		#######
###########################
jwt.header = Authorization
jwt.expiration = 7200
jwt.privateKey= C:/Users/Cosenz/eclipse-workspace/spring-cms-sample/src/main/resources/certificate/jwt/private_key.der
jwt.publicKey = C:/Users/Cosenz/eclipse-workspace/spring-cms-sample/src/main/resources/certificate/jwt/public_key.der


###########################
##### 		SSL		#######
###########################
# Launch follow command for generate the certificate:
# keytool -genkeypair -alias tomcat -keyalg RSA -storetype PKCS12 -keysize 4096 -keystore keystore.jks -validity 3650 -storepass cosenz91
# keytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -deststoretype pkcs12
# keytool -export -keystore keystore.p12 -alias tomcat -file clientCertificate.crt
# keytool -importcert -file clientCertificate.crt -alias tomcat -keystore "C:/Program Files/Java/jdk1.8.0_201/jre/lib/security/cacerts"

server.port=8443
# enable ssl
security.require-ssl=true
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:certificate/tsl/keystore.p12
# The password used to generate the certificate
server.ssl.key-store-password=cosenz91
# The alias mapped to the certificate
server.ssl.key-alias=tomcat